{
  "name": "Angular2-quickstart",
  "tagline": "This repo contain the Running Angular2 quick start app and its instruction how to create angular 2 app",
  "body": "# angular2-quickstart\r\nThis repo contain the Running Angular2 quick start app and its instruction how to create angular 2 app.\r\n\r\nAngular 2 is in TypeScript\r\n\r\nFor creating angular 2 project app we need to setup our development environment:\r\n\t\r\n- install node and npm\r\n- create and application project folder\r\n- add a `tsconfig.json` to guide TypeScript Compiler\r\n- add a `typings.json` that identifies missing  TypeScript definition files\r\n- add a `package.json` that defines the packages and scripts we need\r\n- install the npm packages and typings files\r\n\r\n**Install** [node and npm] if not already on your machine.\r\n\r\nCreate a **new project folder**\r\n\r\n```sh\r\nmkdir your_project_name\r\ncd your_project_name\r\n```\r\n\r\nAdd a `tsconfig.json` file to the project folder and copy/paste the following:\r\n\r\n```sh\r\n{\r\n  \"compilerOptions\": {\r\n    \"target\": \"es5\",\r\n    \"module\": \"system\",\r\n    \"moduleResolution\": \"node\",\r\n    \"sourceMap\": true,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"removeComments\": false,\r\n    \"noImplicitAny\": false\r\n  },\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"typings/main\",\r\n    \"typings/main.d.ts\"\r\n  ]\r\n}\r\n```\r\nThis `tsconfig.json` file guides the TypeScript compiler.\r\n\r\nAdd a `typings.json` file to the project folder and copy/paste the following:\r\n\r\n```sh\r\n{\r\n  \"ambientDependencies\": {\r\n    \"es6-shim\": \"github:DefinitelyTyped/DefinitelyTyped/es6-shim/es6-shim.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd\",\r\n    \"jasmine\": \"github:DefinitelyTyped/DefinitelyTyped/jasmine/jasmine.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd\"\r\n  }\r\n}\r\n```\r\n\r\nAdd a `package.json` file to the project folder and copy/paste the following:\r\n\r\n```sh\r\n{\r\n  \"name\": \"angular2-quickstart\",\r\n  \"version\": \"1.0.0\",\r\n  \"scripts\": {\r\n    \"start\": \"tsc && concurrently \\\"npm run tsc:w\\\" \\\"npm run lite\\\" \",    \r\n    \"tsc\": \"tsc\",\r\n    \"tsc:w\": \"tsc -w\",\r\n    \"lite\": \"lite-server\",\r\n    \"typings\": \"typings\",\r\n    \"postinstall\": \"typings install\" \r\n  },\r\n  \"license\": \"ISC\",\r\n  \"dependencies\": {\r\n    \"angular2\": \"2.0.0-beta.13\",\r\n    \"systemjs\": \"0.19.25\",\r\n    \"es6-shim\": \"^0.35.0\",\r\n    \"reflect-metadata\": \"0.1.2\",\r\n    \"rxjs\": \"5.0.0-beta.2\",\r\n    \"zone.js\": \"0.6.6\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"concurrently\": \"^2.0.0\",\r\n    \"lite-server\": \"^2.1.0\",\r\n    \"typescript\": \"^1.8.9\",\r\n    \"typings\":\"^0.7.11\"\r\n  }\r\n}\r\n```\r\nInstall these packages by entering the following npm command in a terminal window (command window in Windows):\r\n\r\n```sh\r\nnpm install\r\n```\r\n\r\nNode_modules are imported in you project directory you can see a folder named `node_modules` in your project directory.\r\n\r\nNow we are all set with the environment development. \r\n\r\n\r\n\r\nLet's create a folder to hold our application and add super-simple angular component.\r\n\r\n**Create an app sub-folder** of the root directory and make it the current directory\r\n\r\n```sh\r\nmkdir app\r\ncd app\r\n```\r\n\r\n**Add a component file** named app.component.ts and paster the following line:\r\n\r\n```sh\r\nimport {Component} from 'angular2/core';\r\n\r\n@Component({\r\n    selector: 'my-app',\r\n    template: '<h1>My First Angular 2 App</h1>'\r\n})\r\nexport class AppComponent { }\r\n```\r\n\r\n> **AppComponent is the root of the application**\r\n\r\nNow we need something to tell Angular to load the root component\r\n\r\nAdd a new file , `main.ts`, to the `app/` folder as follows:\r\n\r\n```sh\r\nimport {bootstrap}    from 'angular2/platform/browser';\r\nimport {AppComponent} from './app.component';\r\n\r\nbootstrap(AppComponent);\r\n```\r\n\r\nNavigate to the **project root folder**.\r\n\r\n```sh\r\ncd ..\r\n```\r\n\r\nCreate an `index.html` file in this root folder and paste the following lines:\r\n\r\n```sh\r\n<html>\r\n  <head>\r\n    <title>Angular 2 QuickStart</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    \r\n    <link rel=\"stylesheet\" href=\"styles.css\">\r\n\r\n    <!-- 1. Load libraries -->\r\n    <!-- IE required polyfills, in this exact order -->\r\n    <script src=\"node_modules/es6-shim/es6-shim.min.js\"></script>\r\n    <script src=\"node_modules/systemjs/dist/system-polyfills.js\"></script>\r\n    <script src=\"node_modules/angular2/es6/dev/src/testing/shims_for_IE.js\"></script>   \r\n\r\n    <script src=\"node_modules/angular2/bundles/angular2-polyfills.js\"></script>\r\n    <script src=\"node_modules/systemjs/dist/system.src.js\"></script>\r\n    <script src=\"node_modules/rxjs/bundles/Rx.js\"></script>\r\n    <script src=\"node_modules/angular2/bundles/angular2.dev.js\"></script>\r\n\r\n    <!-- 2. Configure SystemJS -->\r\n    <script>\r\n      System.config({\r\n        packages: {        \r\n          app: {\r\n            format: 'register',\r\n            defaultExtension: 'js'\r\n          }\r\n        }\r\n      });\r\n      System.import('app/main')\r\n            .then(null, console.error.bind(console));\r\n    </script>\r\n  </head>\r\n\r\n  <!-- 3. Display the application -->\r\n  <body>\r\n    <my-app>Loading...</my-app>\r\n  </body>\r\n</html>\r\n```\r\n\r\n>The System.import call tells SystemJS to import the main file (main.js ... after transpiling \r\n>main.ts, remember?). main is where we tell Angular to launch the application. We also catch and \r\n>log launch errors to the console.\r\n>\r\n>All other modules are loaded upon request either by an import statement or by Angular itself.\r\n>\r\n>**<my-app>**\r\n>\r\n>When Angular calls the bootstrap function in main.ts, it reads the AppComponent metadata, finds \r\n>the my-app selector, locates an element tag named my-app, and loads our application between \r\n>those tags.\r\n\r\n\r\nStyles aren't essential but they're nice and the `index.html` assumes we have a stylesheet called `styles.css`.\r\n\r\nCreate a `styles.css` in the root folder and start styling, perhaps with this set:\r\n\r\n```sh\r\n/* Master Styles */\r\nh1 {\r\n  color: #369; \r\n  font-family: Arial, Helvetica, sans-serif;   \r\n  font-size: 250%;\r\n}\r\nh2, h3 { \r\n  color: #444;\r\n  font-family: Arial, Helvetica, sans-serif;   \r\n  font-weight: lighter;\r\n}\r\nbody { \r\n  margin: 2em; \r\n}\r\nbody, input[text], button { \r\n  color: #888; \r\n  font-family: Cambria, Georgia; \r\n}\r\n\r\n/* \r\n * See https://github.com/angular/angular.io/blob/master/public/docs/_examples/styles.css\r\n * for the full set of master styles used by the documentation samples\r\n */\r\n```\r\n\r\n### Compile and run\r\n\r\n```sh\r\nnpm start\r\n```\r\n\r\n### Final Structure\r\n\r\nOur final project folder structure looks like this:\r\n\r\n```sh\r\nYour_project_name\r\n|---app\r\n|   |---app.component.ts\r\n|   |---main.ts\r\n|---node_modules ...\r\n|---typings ...\r\n|---index.html\r\n|---package.json\r\n|---styles.css\r\n|---tsconfig.json\r\n|---typings.json\r\n```\r\n\r\nNow yor first project is Created and All the best for the further Development on Angular 2 Cheer !!\r\n\r\nFor more info, tutorial and docs visit [Angular2 doc]. \r\n\r\n[node and npm]: <https://nodejs.org/en/download/>\r\n[Angular2 doc]: <https://angular.io/docs/ts/latest/>\r\n[tsconfig.json]: <#tsconfig>\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}